# 1.)
'''https://www.practicepython.org/exercise/2014/01/29/01-character-input.html'''

# name = input('Pass Your name > ')
# age = int(input('Pass Your age > '))
# x_copy = int(input('Pass any number > '))
#
# what_age = (2019 - age) + 100
#
# for i in range(x_copy):
#     print(f'{name} will be 100 years old in year {what_age}\n')



# 2.)
'''https://www.practicepython.org/exercise/2014/02/05/02-odd-or-even.html'''

# number = int(input('Type number > '))
#
# if number % 2 == 0:
#     print('Odd')
# else:
#     print('Even')



# 3.)
'''https://www.practicepython.org/exercise/2014/02/15/03-list-less-than-ten.html'''

# a = [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89]
# b = []

# for num in a:
#     if num < 5:
#         b.append(num)
#
# print(b)
#
# print([num for num in a if num < 5])


# num = input('Enter the number > ')

# for i in a:
#     if i < 5:
#         b.append(i)
#     else:
#         pass
#
# for x in b:
#     print(x)

# print([b.append(i) for i in a if i < 5])



# 4.)
'''https://www.practicepython.org/exercise/2014/02/26/04-divisors.html'''

# divs = []
#
# number = int(input('Type a number > '))
#
# x = list(range(1, number+1))
#
# for n in x:
#     if n % 2 == 0:
#         divs.append(n)
#
# print(divs)



# 5.)
'''https://www.practicepython.org/exercise/2014/03/05/05-list-overlap.html'''

# Using sets
# a = [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89]
# b = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]

# all_values = set()
#
# for i in a:
#     all_values.add(i)
#
# for j in b:
#     all_values.add(j)
#
# result = list(all_values)
#
# print(result)

# Using lists
# a = range(random.randint(1,20))
# b = range(random.randint(10, 40))
#
# c = []
#
# for num in a:
#     if num in b and num not in c:
#         c.append(num)
#
# print(c)




#6.)
'''https://www.practicepython.org/exercise/2014/03/12/06-string-lists.html'''

# any_word = str(input('Enter the string > '))
# result = list(any_word)
#
# x = result[::-1]
# print(x)


# print(any_word[::-1])


# any_word = str(input('Enter the string > '))
# if any_word[::-1] == any_word:
#     print('It is a palindrome')
# else:
#     print('It is not a palindrome')



# 7.)
'''https://www.practicepython.org/exercise/2014/03/19/07-list-comprehensions.html'''
# a = [1, 4, 9, 16, 25, 36, 49, 64, 81, 100]
#
# result = [num for num in a if num % 2 == 0]
# print(result)



# 8.)
'''https://www.practicepython.org/exercise/2014/03/26/08-rock-paper-scissors.html'''
# Rock > Scissors
# Scissors > Paper
# Paper > Rock
# def whos_win(arg1, arg2):
#         if arg1 == arg2:
#             return('Its a deuce')
#         elif arg1 == 1:
#             if arg2 == 2:
#                 return (f'{user_1} use {options.get(1)} and {user_2} use {options.get(2)}.\nThe winner is: {user_1}')
#             elif arg2 == 3:
#                 return (f'{user_1} use {options.get(1)} and {user_2} use {options.get(3)}.\nThe winner is: {user_2}')
#
#         elif arg1 == 2:
#             if arg2 == 1:
#                 return (f'{user_1} use {options.get(2)} and {user_2} use {options.get(1)}.\nThe winner is: {user_2}')
#             elif arg2 == 3:
#                 return (f'{user_1} use {options.get(2)} and {user_2} use {options.get(3)}.\nThe winner is: {user_1}')
#
#         elif arg1 == 3:
#             if arg2 == 1:
#                 return (f'{user_1} use {options.get(3)} and {user_2} use {options.get(1)}.\nThe winner is: {user_1}')
#             elif arg2 == 2:
#                 return (f'{user_1} use {options.get(3)} and {user_2} use {options.get(2)}.\nThe winner is: {user_2}')
#
#         else:
#             return ('Uncorrect value, please try again')
#
#
# user_1 = (input('Enter Your name > '))
# user_2 = (input('Enter Your name > '))
#
#
# options = {1: 'Rock', 2: 'Scissors', 3: 'Paper'}
#
# while True:
#     try:
#         usr_command = input('Enter Your command\n"quit" = break loop | "Press Enter" continue\n')
#         if usr_command == 'quit':
#             break
#         else:
#             user_1_answer = int(input(f'Which one do You want to choose {user_1} > '))
#             user_2_answer = int(input(f'Which one do You want to choose {user_2} > '))
#             print(whos_win(user_1_answer, user_2_answer))
#             print(f'\nYou have these options:\n{options}.')
#     except ValueError:
#         print('Oops, sth go wrong')
#         break



# 9.)
'''https://www.practicepython.org/exercise/2014/04/02/09-guessing-game-one.html'''

# import random
#
# guess_count = 0
# number = random.randint(0, 10)
#
# while True:
#     user_quess = int(input('Please guess the number > '))
#     if user_quess < number:
#         print('To Low')
#     elif user_quess > number:
#         print('To High')
#     else:
#         print('Good shot')
#         break
#     guess_count+=1
#     print('Counting: ', guess_count)

# print('Counter: ', guess_count)



# 10.)
'''https://www.practicepython.org/exercise/2014/04/10/10-list-overlap-comprehensions.html'''

# import random
#
# a = random.sample(range(1,30), 10)
# b = random.sample(range(1,30), 15)
#
# result = [i for i in set(a) if i in b]
# print(result)




'''https://www.practicepython.org/exercise/2014/04/16/11-check-primality-functions.html'''
# 11.)
# NOT FINISH
# def is_number_prime(arg1):
#     if arg1 < 1:
#         return 'This number is not prime'
#     elif arg1 % 2 == 0:
#         return 'This number is prime'
#
# number = int(input('Type a number > '))
# print(is_number_prime(number))



# 12.)
'''https://www.practicepython.org/exercise/2014/04/25/12-list-ends.html'''

# a = [5, 10, 15, 20, 25]
#
# def list_ends(a):
#     return [a[0], a[len(a)-1]]
#
# def list_ends2(a):
#     return [a[0], a[-1]]
#
# print(list_ends(a))
# print(list_ends2(a))



# 13.)
'''https://www.practicepython.org/exercise/2014/04/30/13-fibonacci.html'''



# 14.)
'''https://www.practicepython.org/exercise/2014/05/15/14-list-remove-duplicates.html'''

# numbers = [1,2,3,3,3,'kokon',5]
# removed_items = []
# # second = set(numbers)
# #
# # print(second)
#
#
# def remove_duplicates_1(arg1):
#     removed_item = set(arg1)
#     return removed_item
#
# def remove_duplicates_2(arg1):
#     for i in arg1:
#         if i not in removed_items:
#             removed_items.append(i)
#     return removed_items
#
# print(remove_duplicates_1(numbers))
# # remove_duplicates_1(numbers)
#
# print(remove_duplicates_2(numbers))
# remove_duplicates_2(numbers)



# 15.)
'''https://www.practicepython.org/exercise/2014/05/21/15-reverse-word-order.html'''

# long_string = str((input('Enter long string with multiple words > ')))
#
# def reverse_string(arg1):
#     y = arg1.split()
#     result = []
#     for word in y:
#         result.insert(0, word)
#     return result
#
# print(reverse_string(long_string))


# 16.)
'''https://www.practicepython.org/exercise/2014/05/28/16-password-generator.html'''

# import random
#
# all_chars = 'abcdefghijklmnopqrstuvwxyz01234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ!@#$%^&*()?'
# pass_len = 8
#
# randomed_pswd = []
#
# for i in range(pass_len):
#     result = random.choice(all_chars)
#     randomed_pswd.append(result)
#
# print(randomed_pswd)


# import random
# import string
#
# new_password = []
#
# def password(x=8):
#     chars = string.ascii_letters + string.digits + string.digits
#     for i in range(x):
#         new_password.append(chars[random.randint(1, 70)])
#     return new_password
#
# print(password())



# 17.)
'''https://www.practicepython.org/exercise/2014/06/06/17-decode-a-web-page.html'''



# 18.)
'''https://www.practicepython.org/exercise/2014/07/05/18-cows-and-bulls.html'''

# --- DOKONCZ ---
# import random
#
# x = random.randint(1000,9999)
# print(x)
#
# print(type(x))
#
# user_guess = int(input('Enter the number > '))
#
# print(type(user_guess))
# #
# if user_guess[0] == x[0]:
#     print('Good')



# 19.)
'''https://www.practicepython.org/exercise/2014/07/14/19-decode-a-web-page-two.html'''



# 20.)
'''https://www.practicepython.org/exercise/2014/11/11/20-element-search.html'''

numbers = [1,2,3,4,5,6,7]
num = 9
#
# def function1(list, x):
#     for i in list:
#         if x in list:
#             return True
#         return False
#
# print(function1(numbers, num))

# def function2(list, number):
#     for element in list:
#         if element == number:
#             return True
#         return False
#
# print(function2(numbers, num))



# 21.)
'''https://www.practicepython.org/exercise/2014/11/30/21-write-to-a-file.html'''



# 22.)
'''https://www.practicepython.org/exercise/2014/12/06/22-read-from-file.html'''

# with open('some.txt', 'r') as f:
#     line = f.readline()
#     while line:
#         print(line)
#         line = f.readline()


# counter_dict = {}
# counter = 0
#
# with open('some.txt') as file_open:
#     line = file_open.readline()
#     while line:
#         print(line)
#         line = file_open.readline()
#         counter+=1
#         print('Counter: ', counter)


# counter_dict = {}
# counter = 0
#
# with open('some.txt', 'r') as f:
#     line = f.readline()
#     while line:
#         line = line.strip()
#         if line in counter_dict:
#             counter_dict[line] += 1
#         else:
#             counter_dict[line] = 1
#         line = f.readline()
#
# print(counter_dict)



# string = '  xoxo love xoxo \n kokoko   '
#
# print(string.strip())


# with open('some.txt', 'r') as f:
#     data = f.read()
#
# print(data)
#
#
#
# with open('some.txt', 'r') as f:
#     for line in f.readlines():
#         print(line, end='')
#     #     for line in f:
#     #         print(line, end='')

# print(f)



# f = open('some2.txt')
# print(list(f))

# counter_dict = {}
#
# with open('some.txt', 'r') as f:
#     for line in f:
#         counter_dict.update(line)
#         print(counter_dict)



# 23.)
'''https://www.practicepython.org/exercise/2014/12/14/23-file-overlap.html'''



# 24.)
'''https://www.practicepython.org/exercise/2014/12/27/24-draw-a-game-board.html'''



# 25.)
'''https://www.practicepython.org/exercise/2015/11/01/25-guessing-game-two.html'''



# 26.)
'''https://www.practicepython.org/exercise/2015/11/16/26-check-tic-tac-toe.html'''



#27.)
'''https://www.practicepython.org/exercise/2015/11/26/27-tic-tac-toe-draw.html'''



# 28.)
'''https://www.practicepython.org/exercise/2016/03/27/28-max-of-three.html'''

def max_num(arg1, arg2, arg3):
    if (arg1 > arg2) and (arg1 > arg3):
        print(f'Max value is {arg1}')
    elif (arg2 > arg1) and (arg2 > arg3):
        print(f'Max value is {arg2}')
    elif (arg3 > arg1) and (arg3 > arg2):
        print(f'Max value is {arg3}')
    else:
        print('Numbers are equal')

val1 = int(input('Type number 1 > '))
val2 = int(input('Type number 2 > '))
val3 = int(input('Type number 3 > '))

print(max_num(val1, val2, val3))


# 29.)
'''https://www.practicepython.org/exercise/2016/08/03/29-tic-tac-toe-game.html'''



# 30.)
'''https://www.practicepython.org/solution/2016/10/15/30-pick-word-solutions.html'''

# import random
#
# i = 0
# randomed_words = []
#
# quantity_rand = int(input('Enter how many words do You want do random > '))
#
# while i < quantity_rand:
#     with open('sowpods.txt') as f:
#         words = list(f)
#         randomed_word = random.choice(words)
#         randomed_words.append(randomed_word)
#         i+=1
#
# print(randomed_words)



# 33.)
'''https://www.practicepython.org/exercise/2017/01/24/33-birthday-dictionaries.html'''

# import time
#
# if __name__ == '__main__':
#
#     birthdays_dict = {
#         'Albert Einstein': '03/14/1879',
#         'Benjamin Franklin': '01/17/1706',
#         'Ada Lovelace': '12/10/1815',
#         'Donald Trump': '06/14/1946',
#         'Rowan Atkinson': '01/6/1955'
#     }
#
#     print('Welcome to the birthday dictionary. '
#           'We know the birthdays of:\n',{key for key in birthdays_dict.keys()})
#
#     time.sleep(2.3)
#
#     x = input('\nWhos birthday do You want do check > ')
#
#     if x in birthdays_dict:
#         print(f'{x} has a birthday at {birthdays_dict[x]}.')
#     else:
#         print(f'We do not have {x} data information.')



# 34.)
'''https://www.practicepython.org/exercise/2017/02/06/34-birthday-json.html'''

# import json
#
# birthday = {}
#
# def add_date():
#     name = str(input('Enter name > '))
#     date = input(f'When {name} was born > ')
#     birthday[name] = date
#
#     with open('birthdays_1.json', 'w') as f:
#         json.dump(birthday, f)
#     print(f'{name} was added to my birthday list\n')
#
# def find_date():
#     name = str(input('Enter name You are looking for > '))
#
#     try:
#         if birthday[name]:
#             print(f'{name} was born in {birthday[name]}.')
#     except KeyError:
#         print(f'{name} does not exist')
#
#
# if __name__ == '__main__':
#
#     with open('birthdays_1.json', 'r') as f:
#         birthday = json.load(f)
#
#     # add_date()
#     find_date()


# import json
# 
# birthday = {}
# 
# def add_date():
#     name = str(input('Enter the name > '))
#     date_born = (input('Enter the date of born > '))
#     birthday[name] = date_born
# 
#     with open('birthdays_1.json', 'w') as f:
#         birthday[name] = json.dump(birthday, f)
# 
# def find_date():
#     name = str(input('Enter the name You are looking for > '))
# 
#     try:
#         if birthday[name]:
#             print(f'The "{name}" were born in {birthday[name]}.')
#     except KeyError:
#         print(f'The "{name}" does not exist in our database.')
# 
# if __name__ == '__main__':
# 
#     with open('birthdays_1.json', 'r') as f:
#         birthday = json.load(f)
# 
#     find_date()
#     add_date()





















# result = []
#
# string = input('Enter sth > ')
# string_splitted = string.split()
#
# for word in string_splitted:
#     result.insert(0, word)
#
#
# print(string_splitted)



# long_string = str((input('Enter long string with multiple words > ')))
#
# def reverse_string(arg1):
#     reversed = arg1.split()
#     reversed.reverse()
#     return ' '.join(reversed)
#
# print(reverse_string(long_string))



# numList = ['1', '2', '3', '4']
# seperator = ', '
#
# print(seperator.join(numList))
#
#
# numTuple = ('1', '2', '3', '4')
# print(seperator.join(numTuple))

# def reverse_v3(x):
#   y = x.split()
#   return " ".join(reversed(y))
#
#
# test1 = input("Enter a sentence: ")
# print(reverse_v3(test1))
